apiVersion: batch/v1
kind: Job
metadata:
  name: cluster-id-sync-hook
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation,HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: cluster-id-fetcher
      restartPolicy: OnFailure
      containers:
      - name: cluster-id-fetcher
        image: quay.io/openshift/origin-cli:latest
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "Fetching cluster ID..."
          CLUSTER_ID=$(oc get clusterversion -o jsonpath='{.items[].spec.clusterID}' 2>/dev/null || echo "unknown-cluster")
          echo "Cluster ID: $CLUSTER_ID"
          
          # Create or update ConfigMap with cluster ID
          cat <<EOF | oc apply -f -
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: cluster-id-config
            namespace: product-kubearchive-logging
          data:
            CLUSTER_ID: "$CLUSTER_ID"
          EOF
          
          echo "ConfigMap updated with cluster ID: $CLUSTER_ID"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-id-fetcher
  namespace: product-kubearchive-logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-id-fetcher
rules:
- apiGroups: ["config.openshift.io"]
  resources: ["clusterversions"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-id-fetcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-id-fetcher
subjects:
- kind: ServiceAccount
  name: cluster-id-fetcher
  namespace: product-kubearchive-logging

